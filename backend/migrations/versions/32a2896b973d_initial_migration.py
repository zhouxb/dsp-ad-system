"""Initial migration

Revision ID: 32a2896b973d
Revises: 
Create Date: 2025-05-12 11:27:45.375221

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '32a2896b973d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('permissions', mysql.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )

    op.create_table('user',
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('full_name', sa.String(length=120), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.String(length=30), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('audit_log', mysql.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('advertiser',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('company_name', sa.String(length=200), nullable=False),
    sa.Column('credit_code', sa.String(length=50), nullable=True, comment='Business license credit code'),
    sa.Column('contact_person', sa.String(length=50), nullable=False),
    sa.Column('contact_phone', sa.String(length=20), nullable=False),
    sa.Column('contact_email', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', 'suspended'), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False, comment='Account balance'),
    sa.Column('qualification_docs', mysql.JSON(), nullable=True, comment='Qualification document URLs'),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('review_history', mysql.JSON(), nullable=True),
    sa.Column('account_manager_id', sa.Integer(), nullable=True),
    sa.Column('industry', sa.String(length=50), nullable=True),
    sa.Column('business_type', sa.String(length=50), nullable=True),
    sa.Column('settings', mysql.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('audit_log', mysql.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['account_manager_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('advertiser', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_advertiser_name'), ['name'], unique=False)

    # Add advertiser_id to user table after advertiser table is created
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('advertiser_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_user_advertiser_id', 'advertiser', ['advertiser_id'], ['id'])

    op.create_table('report',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Enum('pending', 'processing', 'completed', 'failed'), nullable=False),
    sa.Column('report_type', sa.String(length=50), nullable=False, comment='Type of report'),
    sa.Column('parameters', mysql.JSON(), nullable=False, comment='Report generation parameters'),
    sa.Column('result_file_path', sa.String(length=255), nullable=True, comment='Path to generated report file'),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('task_id', sa.String(length=100), nullable=True, comment='Celery task ID'),
    sa.Column('processing_started_at', sa.DateTime(), nullable=True),
    sa.Column('processing_completed_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('audit_log', mysql.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('campaign',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('advertiser_id', sa.Integer(), nullable=False),
    sa.Column('daily_budget', sa.Float(), nullable=False),
    sa.Column('total_budget', sa.Float(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('draft', 'pending', 'active', 'paused', 'completed', 'rejected'), nullable=False),
    sa.Column('targeting', mysql.JSON(), nullable=True, comment='Targeting criteria'),
    sa.Column('bid_strategy', sa.Enum('cpc', 'cpm', 'cpa', 'cpi'), nullable=False),
    sa.Column('bid_amount', sa.Float(), nullable=False),
    sa.Column('frequency_cap', sa.Integer(), nullable=True, comment='Maximum impressions per user'),
    sa.Column('frequency_period', sa.String(length=20), nullable=True, comment='Period for frequency cap (e.g., day, week)'),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('settings', mysql.JSON(), nullable=True),
    sa.Column('optimization_goal', sa.String(length=50), nullable=True, comment='Optimization goal (e.g., clicks, conversions)'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('audit_log', mysql.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['advertiser_id'], ['advertiser.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('custommetric',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('advertiser_id', sa.Integer(), nullable=False),
    sa.Column('formula', sa.String(length=500), nullable=False, comment='Formula for calculating metric'),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['advertiser_id'], ['advertiser.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('qualificationfile',
    sa.Column('advertiser_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('original_name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected'), nullable=False),
    sa.Column('uploaded_by_id', sa.Integer(), nullable=False),
    sa.Column('reviewed_by_id', sa.Integer(), nullable=True),
    sa.Column('review_comment', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['advertiser_id'], ['advertiser.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('transaction',
    sa.Column('advertiser_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('balance_after', sa.Float(), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=False),
    sa.Column('reference_id', sa.String(length=100), nullable=True),
    sa.Column('details', mysql.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('audit_log', mysql.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['advertiser_id'], ['advertiser.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transaction_reference_id'), ['reference_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_transaction_transaction_type'), ['transaction_type'], unique=False)

    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )

    op.create_table('creative',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('advertiser_id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('draft', 'pending', 'active', 'paused', 'rejected', 'archived'), nullable=False),
    sa.Column('type', sa.Enum('image', 'video', 'html5', 'native'), nullable=False),
    sa.Column('format', sa.String(length=50), nullable=False, comment='Creative format (e.g., 300x250, 728x90)'),
    sa.Column('file_type', sa.String(length=20), nullable=False, comment='File type (e.g., jpg, mp4, zip)'),
    sa.Column('file_size', sa.Integer(), nullable=False, comment='File size in bytes'),
    sa.Column('file_path', sa.String(length=255), nullable=False, comment='Path to creative file'),
    sa.Column('preview_url', sa.String(length=255), nullable=True, comment='URL for previewing the creative'),
    sa.Column('landing_page_url', sa.String(length=255), nullable=True, comment='URL of the landing page'),
    sa.Column('click_tracking_url', sa.String(length=255), nullable=True, comment='URL for click tracking'),
    sa.Column('impression_tracking_url', sa.String(length=255), nullable=True, comment='URL for impression tracking'),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('settings', mysql.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('audit_log', mysql.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['advertiser_id'], ['advertiser.id'], ),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaign.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('hourlystatistic',
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('creative_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('hour', sa.Integer(), nullable=False),
    sa.Column('impressions', sa.Integer(), nullable=False),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('conversions', sa.Integer(), nullable=False),
    sa.Column('spend', sa.Float(), nullable=False),
    sa.Column('revenue', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaign.id'], ),
    sa.ForeignKeyConstraint(['creative_id'], ['creative.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('dailystatistic',
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('creative_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('impressions', sa.Integer(), nullable=False),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('conversions', sa.Integer(), nullable=False),
    sa.Column('spend', sa.Float(), nullable=False),
    sa.Column('revenue', sa.Float(), nullable=False),
    sa.Column('metadata', mysql.JSON(), nullable=True, comment='Additional metrics and dimensions'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaign.id'], ),
    sa.ForeignKeyConstraint(['creative_id'], ['creative.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('alembic_version',
    sa.Column('version_num', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('version_num')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('alembic_version')
    op.drop_table('dailystatistic')
    op.drop_table('hourlystatistic')
    op.drop_table('creative')
    op.drop_table('user_roles')
    op.drop_table('transaction')
    op.drop_table('qualificationfile')
    op.drop_table('custommetric')
    op.drop_table('campaign')
    op.drop_table('report')
    op.drop_table('advertiser')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
